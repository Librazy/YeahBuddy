buildscript {

    configurations.all {
        resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
    }

    repositories {
        maven { url 'https://repo.spring.io/libs-snapshot' }
    }

    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:$springBootVersion"
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.15.0'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'war'
}

apply plugin: 'org.springframework.boot'
apply plugin: 'com.github.ben-manes.versions'


configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group 'cn.edu.xmu.yeahbuddy'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven {
        url 'https://repo.spring.io/libs-snapshot'
    }
}

configurations {
    webjars
    compile.extendsFrom(webjars)
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-web:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-thymeleaf:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-data-jpa:$springBootVersion"
    compile "org.springframework.boot:spring-boot-starter-security:$springBootVersion"

    compile "org.springframework.boot:spring-boot-devtools:$springBootVersion"

    webjars 'org.webjars.bower:bootstrap-material-design:4.0.2'
    webjars 'org.webjars.bower:bootstrap:4.0.0-alpha.6'
    compile 'org.webjars:webjars-locator:0.32-1'

    compile 'com.h2database:h2:1.4.196'
    compile 'mysql:mysql-connector-java:6.0.6'
    compile 'com.google.code.findbugs:jsr305:3.0.2'
    compile 'org.jetbrains:annotations:15.0'

    providedRuntime "org.springframework.boot:spring-boot-starter-tomcat:$springBootVersion"

    testCompile "org.springframework.boot:spring-boot-starter-test:$springBootVersion"
    testCompile "org.springframework.security:spring-security-test:$springVersion"
    testCompile 'org.apache.httpcomponents:httpclient:4.5.3'
    testCompile 'junit:junit:4.12'
}

compileJava {
    options.compilerArgs += ["-Xlint:all"]
}

bootRun {
    environment 'spring.profiles.active', 'dev'
}

task('extractWebjars') {
    doLast {
        configurations.webjars.each { jar ->
            println jar.absolutePath
            def config = configurations.webjars.resolvedConfiguration
            def artifact = config.resolvedArtifacts.find {
                it.file.toString() == jar.absolutePath
            }

            def upStreamVersion = "${artifact.moduleVersion.id.version}"
            upStreamVersion = upStreamVersion.replaceAll(/(-[\d.-]+)/, '')

            copy {
                from zipTree(jar)
                into file("${buildDir}/webjars-content/${artifact.name}")
            }
            copy {
                from "${buildDir}/webjars-content/${artifact.name}/META-INF/resources/webjars/${artifact.name}/${upStreamVersion}",
                        "${buildDir}/webjars-content/${artifact.name}/META-INF/resources/webjars/${artifact.name}/${artifact.moduleVersion.id.version}"

                into "src/main/resources/webjars/${artifact.name}"
            }
        }
    }
}

task('deployWebjars') {
    doLast {
        configurations.webjars.each { jar ->
            println jar.absolutePath
            def config = configurations.webjars.resolvedConfiguration
            def artifact = config.resolvedArtifacts.find {
                it.file.toString() == jar.absolutePath
            }

            def upStreamVersion = "${artifact.moduleVersion.id.version}"
            upStreamVersion = upStreamVersion.replaceAll(/(-[\d.-]+)/, '')

            copy {
                from zipTree(jar)
                into file("${buildDir}/webjars-content/${artifact.name}")
            }
            copy {
                from "${buildDir}/webjars-content/${artifact.name}/META-INF/resources/webjars/${artifact.name}/${upStreamVersion}",
                        "${buildDir}/webjars-content/${artifact.name}/META-INF/resources/webjars/${artifact.name}/${artifact.moduleVersion.id.version}"

                into "src/main/resources/webjars/${artifact.name}/${upStreamVersion}"
            }
        }
    }
}

processResources {
    exclude('/webjars/**')
}